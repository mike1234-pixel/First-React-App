{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/AboutReact.js","Components/BestReactTutorials.js","Components/Error.js","Components/ContactCard.js","Components/ContactCardsData.js","Components/ContactCards.js","Components/Button.js","Components/StateDescriptionText.js","Components/TodoItems.js","Components/TodoList.js","Components/TimeOfDayGreeting.js","Components/TimeOfDayGreetingInfo.js","Components/ContactCardsInfo.js","Components/Home.js","Components/App.js","index.js"],"names":["Header","className","to","React","Component","Footer","thisYear","Date","getFullYear","AboutReact","from","opacity","marginTop","props","style","xmlns","viewBox","fill","d","cx","cy","r","BestReactTutorials","title","width","height","src","frameborder","allow","allowfullscreen","Error","ContactCard","this","name","phone","email","ContactCardsData","id","ContactCards","contactCardsComponents","map","key","Button","state","count","handleClick","bind","handleClickDecrement","setState","prevState","console","log","onClick","prevProps","snapshot","StateDescriptionText","TodoItems","createTasks","delete","item","text","listItems","entries","TodoList","items","addItem","deleteItem","e","_inputElement","value","newItem","now","concat","preventDefault","filteredItems","filter","onSubmit","placeholder","ref","a","TimeOfDayGreeting","timeOfDay","hours","getHours","styles","fontSize","boxShadow","borderRadius","color","backgroundImage","backgroundSize","overflow","TimeOfDayGreetingInfo","ContactCardsInfo","Home","mount","mountButton","unmountButton","disabled","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8f4a964.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar\">\r\n                        <ul>\r\n                            <Link to=\"/Home\" className=\"NavLink\"><li>Home</li></Link>\r\n                            <Link to=\"/AboutReact\" className=\"NavLink\"><li>About React</li></Link>\r\n                            <Link to=\"/BestReactTutorials\" className=\"NavLink\"><li>Best React Tutorials</li></Link>\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )        \r\n    }\r\n}\r\n\r\nexport default Header\r\n\r\n// Here I have added the className \"navbar\" to the nav so I can style it","import React from \"react\";\r\n\r\n/* function Footer() {\r\n    var thisYear = new Date().getFullYear();\r\n    return (\r\n        \r\n        <footer>This is my footer. Copyright Michael Tandy {thisYear}</footer>\r\n    )\r\n} */\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        var thisYear = new Date().getFullYear();\r\n        return (\r\n            <footer>&copy; Michael Tandy {thisYear}</footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport Footer from \"./Footer.js\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\n\r\n\r\nclass AboutReact extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <Spring\r\n            from={{ opacity: 0, marginTop: -500 }}\r\n            to={{ opacity: 1, marginTop: 0 }}\r\n            >\r\n            {props => (\r\n              <div style={props}>\r\n            \r\n                <Header/>\r\n                <h1 className=\"heading\">What is a single page application?</h1>\r\n                <div className=\"textbox\">\r\n                <p>\r\n                React is a JavaScript frameworks which enables you to break up your code into reusable chunks called components.\r\n                </p>\r\n                <p>\r\n                This makes your code easier to debug and reuse across pages, which enables better scalability when your apps become larger and more complex.\r\n                </p>\r\n                <p>\r\n                React enables you to create custom components, such as a &lt;NavBar&gt;, which can then be used in other parts of your app. \r\n                </p>\r\n                <p>\r\n                Traditional websites would use multiple HTML files with links between them, and send an HTTP request to a server whenever a different page of the website was loaded.\r\n                </p>\r\n                <p>\r\n                Therefore when navigating a traditional website many HTTP server requests and page loads would occur.\r\n                </p>\r\n                <p>\r\n                React tackles this problem by enabling you to create a single page application which rerenders in accordance with the client interaction with the page.\r\n                </p>\r\n                <p>\r\n                A single page application, therefore, need only load once, and simply rerenders when the client navigates through the application.\r\n                </p>\r\n                </div>\r\n\r\n\r\n                <h1 className=\"heading\">What is React Router and how does it work?</h1>\r\n                <div  className=\"textbox\">\r\n                <p>\r\n                React router enables you to create multiple pages on a single page application. This enables you to load new content <em>without</em> requiring you to send a new HTTP request to a server.\r\n                </p>\r\n                <p>\r\n                You must install react-router-dom in order to be able to use it as it does not come installed in the Create React App package. Once installed, the react router package should be visible in your node_modules folder.\r\n                </p>\r\n                <p>\r\n                You must then import BrowserRouter, Route and Switch from \"react-router-dom\" as we will be using these three components. &lt;BrowserRouter&gt; and &lt;Switch&gt; are wrappers and &lt;Route&#47;&gt; is self-closing.\r\n                </p>\r\n                <p>\r\n                In your App.js file, wrap a &lt;Route&#47;&gt; inside a &lt;BrowserRouter&gt; and wrap all this in a &lt;div&gt;. The &lt;Route&#47;&gt; component takes parameters, which will be the path to the new component we want to render. For example &lt;Route path=\"/Home\" &#47;&gt;.\r\n                </p>\r\n                <p>\r\n                The second parameter is the component the path will lead to, such as &lt;Route path=\"/Home\" component={'{Home}'} &#47;&gt;. Once I enter localhost:3000/Home the Home component should render.\r\n                </p>\r\n                <p>\r\n                Then we can wrap our &lt;Route&#47;&gt; components inside a &lt;Switch&gt; component. The &lt;Switch&gt; component will only render the first &lt;Route&#47;&gt; component that matches the path.\r\n                </p>\r\n                <p>\r\n                Finally, we can import {'{ Link }'} from react-router-dom in the &lt;NavBar&gt; element, for example. Which enables us to create a link to a path. The syntax is {'<'}Link to=\"/Home\"{'>'}{'<'}li{'>'}Home{'<'}li{'/>'}{'<'}Link{'/>'}\r\n                </p>\r\n                <p>\r\n                And now we have multiple pages on a single page application!\r\n                </p>\r\n                </div>\r\n\r\n\r\n                <h1 className=\"heading\">What are components?</h1>\r\n                <div className=\"textbox\">\r\n                <p>\r\n                You wouldn't want to stick your entire web applicaiton code inside ReactDOM.render(). For a page with hundreds of elements on it, this would be impossible to maintain.\r\n                </p>\r\n                <p>\r\n                One of the reasons React is popular is reusable web components.\r\n                </p>\r\n                <p>\r\n                You can create either functional components by writing a function, or class-based components by creating a class. Most are done using class, as this gives you access to the functionalities of the React component, including state.\r\n                </p>\r\n                <p>\r\n                It is a good convention to have each React component in its own, separate .js file. This enables better organised work on projects, reusable components and scalability of applications.\r\n                </p>\r\n                <p>\r\n                When creating a component we start by importing React on the first line of the file, then exporting our component on the last line. We can then write our component, and it can be imported anywhere in our application.\r\n                </p>\r\n                <p>\r\n                In React, you're going to have a heirarchy of components that eventually lead down to JSX elements. For example, &lt;App &#47;&gt; --> &lt;NavBar &#47;&gt; --> {'<'}ul{'>'}{'</'}ul{'>'}.\r\n                </p>\r\n                <p>\r\n                Here, the HTML element is the most base root of this tree. The &lt;NavBar &#47;&gt; is the child of the &lt;App &#47;&gt; component, and also the parent of the unordered list. \r\n                </p>\r\n                <p>\r\n                The &lt;App &#47;&gt; component can also branch down into other eventual HTML elements. \r\n                </p>\r\n                </div>\r\n\r\n                <h1 className=\"heading\">What are props?</h1>\r\n                <div className=\"textbox\">\r\n                <p>\r\n                Props is a keyword in React which stands for properties. It is used for passing data from a parent component to its child component. Data from props are passed unidirectionally (parent to child).\r\n                </p>\r\n                <p>\r\n                Props is read-only, meaning data coming through props cannot be manipulated by child components. It can only be rendered/displayed. \r\n                </p>\r\n                <p>\r\n                Adding a prop to a component is similar to adding an attribute to an HTML element. {'<'}a href=\"value\"{'>'}Link{'<'}a{'/>'} is similar to {'<'}Component property=\"value\" {'/>'}.\r\n                </p>\r\n                <p>\r\n                For example, the contact cards on the homepage pull data from an array of objects which list their contact details. In ContactCards.js, I added properties to the &lt;ContactCard&#47;&gt; component and assigned values to the properties like so: \r\n                </p>\r\n                <p>\r\n                {'<'}ContactCard name={'{'}ContactCardsData.name{'}'} phone={'{'}ContactCardsData.phone{'}'} email={'{'}ContactCardsData.email{'}'} key={'{'}ContactCardsData.id{'}'} {'/>'}\r\n                </p>\r\n                <p>\r\n                In the ContactCard component we now have props data we can use and display:\r\n                </p>\r\n                <p>\r\n                {'class ContactCard extends React.Component { render() { return ( <div className=\"ContactCard\"><h3>{this.props.name}</h3><p>Phone: {this.props.phone}</p><p>Email: {this.props.email}</p></div>)}}}'}.\r\n                </p>\r\n                <p>\r\n                Props (data) have now been passed from parent {'<ContactCards />'} to child {'<ContactCard />'}.\r\n                </p>\r\n                </div>\r\n\r\n                <h1 className=\"heading\">What is state?</h1>\r\n                <div className=\"textbox\">\r\n                <p>\r\n                State is simply the data that a component maintains. Props are immutable so can't be changed by the child component, for example we cannot say this.props.value = \"some new value\". We cannot change props.\r\n                </p>\r\n                <p>\r\n                State is different in that it is a way that a component can maintain its own data and change its own data if it needs to.\r\n                </p>\r\n                <p>\r\n                To introduce state to a component we first need to add a constructor method. A constructor is a place where you're going to be initialising some values. We initialise state here by adding this.state = 0 to our constructor.\r\n                </p>\r\n                <p>\r\n                Our component now has state and we have given an initial value to to our state. \r\n                </p>\r\n                <p>\r\n                We can pass this state to child components using props. If we change the state using the setState() method, React will automatically update every child component that is receiving that state.\r\n                </p>\r\n                <p>\r\n                For example, on Home I have a {'<Button />'} component which has its initial value set to 0. And every time the user clicks submit, I want this value to increment by one each time.\r\n                </p>\r\n                <p>\r\n                I then added the event handler onClick which registers when the button is click, and created a function handleClick() which, every time the button is clicked, remembers the previous state (or previous value) and adds 1 to it.  \r\n                </p>\r\n                <p>\r\n                Finally this function must be bound to the constructor() method by adding: this.handleClick = this.handleClick.bind(this) inside the constructor. This binds this function to this state within the context of this component.\r\n                </p>\r\n                <p>\r\n                Now that we have the ability to make components maintain their own data in state this opens up a lot of possibilities as to what we can do with our React applications.\r\n                </p>\r\n                </div>\r\n\r\n                <h1 className=\"heading\">What are lifecycle methods?</h1>\r\n                <div className=\"textbox\">\r\n                <p>\r\n                React components go through a lifecycle of being created (mounted to the DOM), growing (updating) and dying (being unmounted or removed from the DOM).\r\n                </p>\r\n                <p>\r\n                Lifecycle methods enable us to manipulate components depending on what stage of the lifecycle they are in. \r\n                </p>\r\n                <p>\r\n                The most commonly used lifecycle methods in React are render(), componentDidMount(), componentDidUpdate() and componentWillUnmount(), which correspond to the lifecycle of the component being rendered.\r\n                </p>\r\n                <p>\r\n                For example, on the homepage the {'<Button />'} component uses the componentDidMount() and componentWillUnmount() to console log the comments 'component did mount' or 'component did unmount' depending on whether the button has been mounted or unmounted.\r\n                </p>\r\n                <p>\r\n                componentDidMount() is called as soon as the component is mounted and ready. This is a good place to initiate API calls, if you need to load data from a remote endpoint.\r\n                </p>\r\n                <p>\r\n                componentDidUpdate() is invoked as soon as the updating happens, and is most commonly used when updating the DOM in response to prop or state changes.\r\n                </p>\r\n                <p>\r\n                componentWillUnMount() is called just before the component is unmounted and destroyed, and is a good place to do any cleanup actions that you need to do such as clearing timers, cancelling API calls, or clearing any caches in storage. Cleaning up code can free up resources for your app and make it run faster, and is important to do in large scale applications.\r\n                </p>\r\n                </div>\r\n\r\n                <div className=\"react-logo\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\r\n                     <g fill=\"#61DAFB\">\r\n                      <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/>\r\n                      <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/>\r\n                      <path d=\"M520.5 78.1z\"/>\r\n                     </g>\r\n                </svg>\r\n                </div>\r\n            \r\n\r\n\r\n                <Footer />\r\n            \r\n               \r\n            </div>\r\n            )}\r\n            </Spring>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutReact\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer.js\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\n\r\nclass BestReactTutorials extends React.Component {\r\n  render() {\r\n    return (\r\n      <Spring\r\n        from={{ opacity: 0, marginTop: -500 }}\r\n        to={{ opacity: 1, marginTop: 0 }}\r\n      >\r\n        {(props) => (\r\n          <div style={props}>\r\n            <Header />\r\n            <p className=\"heading\">\r\n              Please find below a selection of some AWESOME React tutorials:\r\n            </p>\r\n            <iframe\r\n              title=\"tutorial-one\"\r\n              width=\"560\"\r\n              height=\"315\"\r\n              src=\"https://www.youtube.com/embed/DLX62G4lc44\"\r\n              frameborder=\"0\"\r\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowfullscreen\r\n            ></iframe>\r\n            <iframe\r\n              title=\"tutorial-two\"\r\n              width=\"560\"\r\n              height=\"315\"\r\n              src=\"https://www.youtube.com/embed/91F8reC8kvo\"\r\n              frameborder=\"0\"\r\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowfullscreen\r\n            ></iframe>\r\n            <iframe\r\n              title=\"tutorial-three\"\r\n              width=\"560\"\r\n              height=\"315\"\r\n              src=\"https://www.youtube.com/embed/2drsTBFZTQE\"\r\n              frameborder=\"0\"\r\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowfullscreen\r\n            ></iframe>\r\n            <Footer />\r\n          </div>\r\n        )}\r\n      </Spring>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BestReactTutorials;\r\n","import React from \"react\";\r\n\r\nclass Error extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"error\">Error: This path does not exist.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error","import React from \"react\";\r\n\r\n/* function ContactCard(props) {\r\n    return (\r\n        <div>\r\n        <h3>{props.name}</h3>\r\n        <p>Phone: {props.phone}</p>\r\n        <p>Email: {props.email}</p>\r\n        </div>\r\n    )\r\n} */\r\n\r\nclass ContactCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ContactCard\">\r\n            <h3>{this.props.name}</h3>\r\n            <p>Phone: {this.props.phone}</p>\r\n            <p>Email: {this.props.email}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactCard\r\n\r\n// props is an object. \r\n// the content of the h3 will be props.name, \r\n// the value of which is defined on the ContactCards component as Roger for the first instance, \r\n// Aled for the second instance, and Benedict for the third instance\r\n// The same happens with email and phone. \r\n// We are passing props from the ContactCards component back to the ContactCard component, where it then renders.","// we don't need to import React here because we don't use JSX\r\n// if we were to add any JSX then we would need to import it\r\n\r\nconst ContactCardsData = [\r\n    {\r\n        id: 1, \r\n        name: \"Roger\", \r\n        phone: \"037 3738 3838\", \r\n        email: \"roger@somewhere.com\"\r\n    }, \r\n    {\r\n        id: 2, \r\n        name: \"Aled\", \r\n        phone: \"338 3838 2728\", \r\n        email: \"aled@somewhere.com\"        \r\n    }, \r\n    {\r\n        id: 3, \r\n        name: \"Benedict\", \r\n        phone: \"748 4838 2929\", \r\n        email: \"benedict@somewhere.com\"         \r\n    },\r\n    {\r\n        id: 4, \r\n        name: \"Mehul\", \r\n        phone: \"453 2121 2091\", \r\n        email: \"mehul@somewhere.com\"         \r\n    }, \r\n    {\r\n        id: 5, \r\n        name: \"John\", \r\n        phone: \"573 3829 2901\", \r\n        email: \"john@somewhere.com\"         \r\n    },\r\n    {\r\n        id: 5, \r\n        name: \"John\", \r\n        phone: \"573 3829 2901\", \r\n        email: \"john@somewhere.com\"         \r\n    }\r\n]\r\n\r\nexport default ContactCardsData\r\n\r\n// This is an example of JSON - JavaScript Object Notation. This data structure type is an example of a non-relational database.","import React from \"react\";\r\nimport ContactCard from \"./ContactCard.js\";\r\nimport ContactCardsData from \"./ContactCardsData.js\";\r\n\r\n/* function ContactCards() {\r\n    const contactCardsComponents = ContactCardsData.map((ContactCardsData) => {\r\n        return <ContactCard name={ContactCardsData.name} phone={ContactCardsData.phone} email={ContactCardsData.email}/>\r\n    })\r\n    \r\n    return (\r\n\r\n        <div>\r\n                {contactCardsComponents}\r\n        </div> \r\n    )\r\n} */\r\n\r\nclass ContactCards extends React.Component {\r\n    render() {\r\n        const contactCardsComponents = ContactCardsData.map((ContactCardsData) => {\r\n            return <ContactCard name={ContactCardsData.name} phone={ContactCardsData.phone} email={ContactCardsData.email} key={ContactCardsData.id}/>\r\n        })\r\n        \r\n        return (\r\n    \r\n            <div>\r\n                    {contactCardsComponents}\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactCards\r\n\r\n/*        <ContactCard \r\n            name=\"Roger\" \r\n            phone=\"037 3738 3838\" \r\n            email=\"roger@somewhere.com\"/>\r\n        <ContactCard \r\n            name=\"Aled\" \r\n            phone=\"338 3838 2728\" \r\n            email=\"aled@somewhere.com\"/>\r\n        <ContactCard \r\n            name=\"Benedict\" \r\n            phone=\"748 4838 2929\" \r\n            email=\"benedict@somewhere.com\"/> */","import React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            count: 0\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleClickDecrement = this.handleClickDecrement.bind(this)\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState((prevState) => {\r\n            return {\r\n                count: prevState.count + 1 // don't use ++ as that's directly modifying the old version of state\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClickDecrement() {\r\n        this.setState((prevState) => {\r\n            return {\r\n                count: prevState.count - 1 // don't use -- as that's directly modifying the old version of state\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"component did mount\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h1 className=\"button-counter\">{this.state.count}</h1>\r\n                 <button onClick={this.handleClick} className=\"button\">Increment</button>\r\n                 <button onClick={this.handleClickDecrement} className=\"button\">Decrement</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"component has updated\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"component did unmount\")\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\n\r\nclass StateDescriptionText extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"DescriptionText\">\r\n                <p>This is a &lt;Button&gt; component.</p>\r\n                <p>When the button is clicked the state is changed and the count is increased by one.</p>\r\n                <p>The &lt;Button&gt; component uses the setState() method.</p>\r\n                <p>It is initialised with a value of 0, remembers its previous state and adds one to whatever prevState is to determine the new state.</p>\r\n                <p>This button can be mounted onto / unmounted from the DOM.</p>\r\n                <p>Beneath the button component is a {'<TodoList />'} component which also uses state.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StateDescriptionText","import React from \"react\";\r\n\r\nclass TodoItems extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n     \r\n        this.createTasks = this.createTasks.bind(this);\r\n      }\r\n     \r\n      delete(key) {\r\n        this.props.delete(key);\r\n      }\r\n\r\n    createTasks(item) {\r\n        return <li className=\"fade-in\" onClick={() => this.delete(item.key)} \r\n              key={item.key}>{item.text}</li>\r\n    }\r\n   \r\n    render() {\r\n      var todoEntries = this.props.entries;\r\n      var listItems = todoEntries.map(this.createTasks);\r\n   \r\n      return (\r\n        <ul className=\"theList\">\r\n            {listItems}\r\n        </ul>\r\n      );\r\n    }\r\n  };\r\n   \r\n  export default TodoItems;\r\n    \r\n// this code renders the value of this.state.items to our browser.\r\n// in the render() for our <TodoList />, we have the following: <TodoItems entries={this.state.items}/>\r\n// TodoList is given a property called \"entries\" which is assigned the value of the current state of the items array...\r\n// these values are what we want to render to our browser in the form of a list.\r\n// <TodoItems entries={this.state.items}/> ... here, a prop (called \"entries\" with the value of this.state.items of the TodoList component),\r\n// is being passed down to its child component.\r\n// It is a child component because it is rendered inside its parent component. \r\n// THIS IS WHAT PASSING PROPS MEANS, WHICH IS JUST PASSING DATA FROM PARENT TO CHILD.\r\n\r\n//  Inside our render() method we define two variables.\r\n// todoEntries, which is assigned the value of entries. var todoEntries = this.props.entries;\r\n// listItems, which is a new array (created using the map() method) created from the todoEntries array (originally this.state.items in the todoList component)...\r\n// Passed into the map method as a paremeter is a function called createTasks\r\n/* The value stored by our listItems variable is an array of li elements containing the appropriate content to print. Notice that we are setting the key attribute (whose value, if you recall, we set earlier using Date.now()) on each element to make it easier for React to keep track of each element.\r\n\r\nWe turn this list of element into something we can show on screen with the following:\r\n\r\nreturn (\r\n  <ul className=\"theList\">\r\n      {listItems}\r\n  </ul>\r\n);*/\r\n\r\n// finally TodoItems returns listItems and they are displayed in the browser.\r\n\r\n\r\n","import React from \"react\";\r\nimport TodoItems from \"./TodoItems.js\"\r\n\r\nclass TodoList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            items: []\r\n        }\r\n\r\n        this.addItem = this.addItem.bind(this)\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    addItem(e) {\r\n        if (this._inputElement.value !== \"\") {\r\n          var newItem = {\r\n            text: this._inputElement.value,\r\n            key: Date.now()\r\n          };\r\n       \r\n          this.setState((prevState) => {\r\n            return { \r\n              items: prevState.items.concat(newItem) \r\n            };\r\n          });\r\n         \r\n          this._inputElement.value = \"\";\r\n        }\r\n         \r\n        console.log(this.state.items);\r\n           \r\n        e.preventDefault();\r\n      }\r\n\r\n      deleteItem(key) {\r\n        var filteredItems = this.state.items.filter(function (item) {\r\n          return (item.key !== key);\r\n        });\r\n       \r\n        this.setState({\r\n          items: filteredItems\r\n        });\r\n      }\r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <form onSubmit={this.addItem}>\r\n                        <input placeholder=\"enter task\" className=\"todo-input-box\" ref={(a) => this._inputElement = a}></input>\r\n                        <button className=\"button\">Submit</button>\r\n                    </form>    \r\n                </div>\r\n                <TodoItems entries={this.state.items} delete={this.deleteItem}/>\r\n            </div>\r\n        )        \r\n    }\r\n}\r\n\r\n\r\nexport default TodoList","import React from \"react\";\r\n\r\n/* function TimeOfDayGreeting() {\r\n    const date = new Date();\r\n    const hours = date.getHours();\r\n    const styles = {\r\n        fontSize: 30,\r\n        boxShadow: \"-1px 1px 71px -3px rgba(0,0,0,0.75)\"\r\n    }\r\n    let timeOfDay;\r\n\r\n    if (hours < 12) {\r\n        timeOfDay = \"morning\"\r\n        styles.color = \"#031f1d\"\r\n        styles.backgroundImage = `url(${'https://images.pexels.com/photos/910411/pexels-photo-910411.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'})`\r\n        styles.backgroundSize = \"cover\"\r\n        styles.overflow = \"hidden\"\r\n    } else if (hours <= 17) {\r\n        timeOfDay = \"afternoon\"\r\n        styles.color = \"#e3dac9\"\r\n        styles.backgroundImage = `url(${'https://images.pexels.com/photos/301599/pexels-photo-301599.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'})`\r\n        styles.backgroundSize = \"cover\"\r\n        styles.overflow = \"hidden\"\r\n    } else {\r\n        timeOfDay = \"evening\"\r\n        styles.color = \"#e3dac9\"\r\n        styles.backgroundImage = `url(${'https://images.pexels.com/photos/102539/nature-milky-way-night-stars-102539.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'})`\r\n        styles.backgroundSize = \"cover\"\r\n        styles.overflow = \"hidden\"\r\n    } \r\n\r\n\r\n\r\n    return ( \r\n    <h1 className=\"TimeOfDayGreeting\" style={styles}>Good {timeOfDay}!</h1> \r\n    )\r\n} */\r\n\r\nclass TimeOfDayGreeting extends React.Component {\r\n    render() {\r\n        const date = new Date();\r\n        const hours = date.getHours();\r\n        const styles = {\r\n            fontSize: 30,\r\n            boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\", \r\n            borderRadius: 10,\r\n            marginTop: 30\r\n        }\r\n        let timeOfDay;\r\n    \r\n        if (hours < 12) {\r\n            timeOfDay = \"morning\"\r\n            styles.color = \"#031f1d\"\r\n            styles.backgroundImage = `url(${'https://images.pexels.com/photos/910411/pexels-photo-910411.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'})`\r\n            styles.backgroundSize = \"cover\"\r\n            styles.overflow = \"hidden\"\r\n        } else if (hours < 17) {\r\n            timeOfDay = \"afternoon\"\r\n            styles.color = \"#e3dac9\"\r\n            styles.backgroundImage = `url(${'https://images.pexels.com/photos/301599/pexels-photo-301599.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'})`\r\n            styles.backgroundSize = \"cover\"\r\n            styles.overflow = \"hidden\"\r\n        } else {\r\n            timeOfDay = \"evening\"\r\n            styles.color = \"#e3dac9\"\r\n            styles.backgroundImage = `url(${'https://images.pexels.com/photos/102539/nature-milky-way-night-stars-102539.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'})`\r\n            styles.backgroundSize = \"cover\"\r\n            styles.overflow = \"hidden\"\r\n        }\r\n\r\n        return ( \r\n            <h1 className=\"TimeOfDayGreeting\" style={styles}>Good {timeOfDay}!</h1> \r\n            )        \r\n    }\r\n}\r\n\r\nexport default TimeOfDayGreeting\r\n\r\n// here we have the styles object declared at the top, \r\n// the styles object is assigned new key-value properties depending on the time of day, in the if/else statement\r\n// in the h1 tag we have our inline style where styles points to the styles object, the contents of which change depending on the time of day.\r\n","import React from \"react\";\r\n\r\nclass TimeOfDayGreetingInfo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"DescriptionText\">\r\n                <p>Above we have a {'<TimeOfDayGreeting/>'} component, which uses conditional rendering.</p>\r\n                <p>The component uses a JavaScript function() which contains an if/else statement which changes the greeting and styling depending on the time of day.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeOfDayGreetingInfo","import React from \"react\";\r\n\r\nclass ContactCardsInfo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"DescriptionText\">\r\n                <p>Below we have a {'<ContactCards />'} component.</p>\r\n                <p>The component pulls data from an array of objects called ContactCardsData.</p>\r\n                <p>{'<ContactCards />'} then passes data from these objects as props to its child component {'<ContactCard />'} before being rendered.</p>\r\n                <p>If more objects are added to the array they are automatically displayed in the browser as contact cards.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactCardsInfo","import React from \"react\"; \r\nimport Header from \"./Header.js\";  \r\nimport Footer from \"./Footer.js\"; \r\nimport ContactCards from \"./ContactCards.js\";\r\nimport Button from \"./Button.js\";\r\nimport StateDescriptionText from \"./StateDescriptionText.js\";\r\nimport TodoList from \"./TodoList.js\";\r\nimport TimeOfDayGreeting from \"./TimeOfDayGreeting.js\";\r\nimport TimeOfDayGreetingInfo from \"./TimeOfDayGreetingInfo.js\"\r\nimport ContactCardsInfo from \"./ContactCardsInfo.js\"\r\nimport { Spring } from \"react-spring/renderprops\";\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            mount: true\r\n        }\r\n        this.mountButton = () => this.setState({ mount: true })\r\n        this.unmountButton = () => this.setState({ mount: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Spring\r\n            from={{ opacity: 0, marginTop: -500 }}\r\n            to={{ opacity: 1, marginTop: 0 }}\r\n            >    \r\n        {props => (\r\n              <div style={props}>\r\n            <Header />\r\n            <TimeOfDayGreeting />\r\n            <h1 className=\"heading\">Welcome to Mike's React App</h1>\r\n            <TimeOfDayGreetingInfo/>\r\n            <ContactCardsInfo/>\r\n            <ContactCards />\r\n            <StateDescriptionText />\r\n            { this.state.mount ? <Button /> : <p className=\"unmounted-message\">{'<Button />'} unmounted</p>}\r\n            <button onClick={this.mountButton} disabled={this.state.mount} className=\"button\">Mount</button>\r\n            <button onClick={this.unmountButton} disabled={!this.state.mount} className=\"button\">Unmount</button>\r\n            <TodoList />\r\n            <Footer />\r\n        </div>\r\n        )}\r\n          </Spring>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\nimport AboutReact from \"./AboutReact.js\";\r\nimport BestReactTutorials from \"./BestReactTutorials\";\r\nimport Error from \"./Error.js\";\r\nimport Home from \"./Home.js\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} />\r\n          <Route path=\"/Home\" component={Home} />\r\n          <Route path=\"/AboutReact\" component={AboutReact} />\r\n          <Route path=\"/BestReactTutorials\" component={BestReactTutorials} />\r\n          <Route component={Error} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\"; \r\nimport App from \"./Components/App.js\";\r\n\r\n\r\nReactDOM.render(\r\n    <div>\r\n    <App /> \r\n    </div>, \r\n    document.getElementById(\"root\")\r\n);\r\n\r\n\r\n"],"sourceRoot":""}